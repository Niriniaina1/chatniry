/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import static client.Login.nom_client;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;


/**
 *
 * @author Franc's
 */
public class Chat extends javax.swing.JFrame {

    
    static boolean isSetupDone;
    static boolean runCam;
    JScrollPane scrollPane;
    static Socket videoSocket, audioSocket;

    static JFrame videoFrame = new JFrame();
    static final int VIDEO_HEIGHT = 320, VIDEO_WIDTH = 240;

    private static final int PORT = 2022;
    static String CURRENT_USER = "Client";

    // Accessed from within inner class needs to be final or effectively final.
    final File[] fichierEnvoyer = new File[1];

    
    DataInputStream dis;
    DataOutputStream dos;

    static DefaultListModel<String> dm;
    String id, clientIds = "";

    public Chat() {
        initComponents();
    }

    /**
     * Creates new form Chat
     * @param id
     * @param s
     */
    public Chat(String id, Socket s) {
        initComponents();
        
        
        this.id = id;

        try {
            this.setTitle("Skype");
            myName.setText(nom_client.getText());
            dm = new DefaultListModel<String>(); // liste par défaut utilisée pour afficher les utilisateurs actifs sur l'interface utilisateur
            afficherClient.setModel(dm);// afficher cette liste sur le composant d'interface utilisateur JList nommé clientActiveUsersList

            dis = new DataInputStream(s.getInputStream()); // initialiser les flux d'entrée et de sortie
            dos = new DataOutputStream(s.getOutputStream());

            new Read().start(); // créer un nouveau fil pour lire les messages

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    class Read extends Thread {

        @Override
        public void run() {

            while (true) {
                try {
                    String m = dis.readUTF();  // lire le message du serveur, il contiendra :;.,/=<ID client séparés par des virgules>

                    if (m.contains(":;.,/=")) {
                        m = m.substring(6); // une virgule a séparé tous les identifiants d'utilisateurs actifs
                        dm.clear(); // effacer la liste avant d'insérer de nouveaux éléments
                        StringTokenizer st = new StringTokenizer(m, ","); // diviser tous les clientsId et ajouter à dm ci-dessous
                        while (st.hasMoreTokens()) {
                            String u = st.nextToken();
                            if (!id.equals(u)) // nous n'avons pas besoin d'afficher notre propre identifiant d'utilisateur dans le volet de la liste des utilisateurs actifs
                            {
                                dm.addElement(u); // ajouter tous les identifiants d'utilisateurs actifs à la liste par défaut à afficher sur actif
                            }
                        }
                    } else {
                        afficherMessage.append("" + m + "\n"); // sinon imprimer sur le babillard des clients
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                    break;
                }
            }
        }
    }

    private String getTime() {
        Date date = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("hh:mm:ss a");
        return formatter.format(date);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        menuG = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        myName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        myName1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRecherche = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        afficherClient = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();
        multicast = new javax.swing.JRadioButton();
        broadcast = new javax.swing.JRadioButton();
        chat = new javax.swing.JPanel();
        panel_head = new javax.swing.JPanel();
        nameSelected = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        editerMessage = new javax.swing.JTextField();
        btnEnvoyer = new javax.swing.JButton();
        fileChooser = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        afficherMessage = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuG.setBackground(new java.awt.Color(252, 252, 252));

        jPanel1.setBackground(new java.awt.Color(252, 252, 252));

        myName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/vevavy.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/ellipse_16px.png"))); // NOI18N

        myName1.setFont(new java.awt.Font("sansserif", 0, 9)); // NOI18N
        myName1.setText(" statut");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myName1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(68, Short.MAX_VALUE))
                    .addComponent(myName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(myName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(myName1))
                            .addComponent(jLabel3)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/search_16px.png"))); // NOI18N

        txtRecherche.setBackground(new java.awt.Color(242, 242, 242));
        txtRecherche.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtRecherche.setForeground(new java.awt.Color(153, 153, 153));
        txtRecherche.setText("  Recherche");
        txtRecherche.setBorder(null);
        txtRecherche.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRechercheFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRechercheFocusLost(evt);
            }
        });
        txtRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRechercheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(252, 252, 252));

        jButton3.setBackground(new java.awt.Color(252, 252, 252));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/chat_bubble_16px.png"))); // NOI18N
        jButton3.setText("conversation");
        jButton3.setBorder(null);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        afficherClient.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                afficherClientFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(afficherClient);

        jButton4.setText("Déconnecter");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(multicast);
        multicast.setText("1-n");
        multicast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multicastActionPerformed(evt);
            }
        });

        buttonGroup1.add(broadcast);
        broadcast.setText("Broadcast");
        broadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                broadcastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuGLayout = new javax.swing.GroupLayout(menuG);
        menuG.setLayout(menuGLayout);
        menuGLayout.setHorizontalGroup(
            menuGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuGLayout.createSequentialGroup()
                .addGroup(menuGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(menuGLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(menuGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(menuGLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(broadcast))))
                    .addGroup(menuGLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton4))
                    .addGroup(menuGLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(multicast)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menuGLayout.setVerticalGroup(
            menuGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuGLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(multicast)
                .addGap(35, 35, 35)
                .addComponent(broadcast)
                .addGap(115, 115, 115)
                .addComponent(jButton4))
        );

        chat.setBackground(new java.awt.Color(255, 255, 255));

        panel_head.setBackground(new java.awt.Color(234, 234, 234));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/vevavy.png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/ellipse_16px.png"))); // NOI18N
        jLabel11.setText("Actif");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/menu_vertical_16px.png"))); // NOI18N

        javax.swing.GroupLayout panel_headLayout = new javax.swing.GroupLayout(panel_head);
        panel_head.setLayout(panel_headLayout);
        panel_headLayout.setHorizontalGroup(
            panel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_headLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_headLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_headLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel12)
                .addContainerGap())
        );
        panel_headLayout.setVerticalGroup(
            panel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_headLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_headLayout.createSequentialGroup()
                        .addComponent(nameSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel11))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(panel_headLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(252, 252, 252));

        editerMessage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editerMessage.setForeground(new java.awt.Color(153, 153, 153));
        editerMessage.setText("Message");
        editerMessage.setBorder(null);
        editerMessage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                editerMessageFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                editerMessageFocusLost(evt);
            }
        });

        btnEnvoyer.setBackground(new java.awt.Color(252, 252, 252));
        btnEnvoyer.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnEnvoyer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/email_send_30px.png"))); // NOI18N
        btnEnvoyer.setBorder(null);
        btnEnvoyer.setContentAreaFilled(false);
        btnEnvoyer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEnvoyer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvoyerActionPerformed(evt);
            }
        });

        fileChooser.setBackground(new java.awt.Color(255, 255, 255));
        fileChooser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/cli/icon/attach_24px.png"))); // NOI18N
        fileChooser.setBorder(null);
        fileChooser.setContentAreaFilled(false);
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(fileChooser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editerMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEnvoyer)
                .addGap(84, 84, 84))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editerMessage)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(btnEnvoyer)))
                .addContainerGap())
        );

        afficherMessage.setColumns(20);
        afficherMessage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        afficherMessage.setRows(5);
        afficherMessage.setBorder(null);
        jScrollPane2.setViewportView(afficherMessage);

        javax.swing.GroupLayout chatLayout = new javax.swing.GroupLayout(chat);
        chat.setLayout(chatLayout);
        chatLayout.setHorizontalGroup(
            chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatLayout.createSequentialGroup()
                .addGroup(chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel_head, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        chatLayout.setVerticalGroup(
            chatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(chat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRechercheFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRechercheFocusGained
        // TODO add your handling code here:
        if (txtRecherche.getText().equals("  Recherche")) {
            txtRecherche.setText("");
            txtRecherche.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_txtRechercheFocusGained

    private void txtRechercheFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRechercheFocusLost
        // TODO add your handling code here:
        if (txtRecherche.getText().isEmpty()) {
            txtRecherche.setForeground(Color.GRAY);
            txtRecherche.setText("  Recherche");
        }
    }//GEN-LAST:event_txtRechercheFocusLost

    private void txtRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRechercheActionPerformed

    private void afficherClientFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_afficherClientFocusGained
        // TODO add your handling code here:
        nameSelected.setText(afficherClient.getSelectedValuesList().get(0));
    }//GEN-LAST:event_afficherClientFocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            dos.writeUTF("exit"); // closes the thread and show the message on server and client's message
            // board
            afficherMessage.append("You are disconnected now.\n");
            this.dispose(); // close the frame
        } catch (IOException e1) {
            e1.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void editerMessageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editerMessageFocusGained
        // TODO add your handling code here:
        if (editerMessage.getText().equals("Message")) {
            editerMessage.setText("");
            editerMessage.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_editerMessageFocusGained

    private void editerMessageFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_editerMessageFocusLost
        // TODO add your handling code here:
        if (editerMessage.getText().isEmpty()) {
            editerMessage.setForeground(Color.GRAY);
            editerMessage.setText("Message");
        }
    }//GEN-LAST:event_editerMessageFocusLost

    private void btnEnvoyerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvoyerActionPerformed
        // TODO add your handling code here:
       Chat main = new Chat();

        String textAreaMessage = editerMessage.getText();
        if (textAreaMessage != null && !textAreaMessage.isEmpty()) {  // seulement si le message n'est pas vide, alors envoyez-le plus loin sinon ne faites rien
            try {
                String messageToBeSentToServer = "";
                String cast = "broadcast"; // ce sera un identifiant pour identifier le type de message
                int flag = 0; // indicateur utilisé pour vérifier si utilisé a sélectionné un client ou non pour la broadcast

                if (multicast.isSelected()) { //Si 1 à n est sélectionné alors faites ceci
                    cast = "multicast";
                    List<String> clientList = afficherClient.getSelectedValuesList(); // obtenir tous les utilisateurs sélectionnés sur l'interface utilisateur
                    if (clientList.isEmpty()) // si aucun utilisateur n'est sélectionné, définissez le drapeau pour une utilisation ultérieure
                    {
                        flag = 1;
                    }
                    for (String selectedUsr : clientList) { // ajouter tous les noms d'utilisateur sélectionnés dans une variable
                        if (clientIds.isEmpty()) {
                            clientIds += selectedUsr;
                        } else {
                            clientIds += "," + selectedUsr;
                        }
                    }

                    messageToBeSentToServer = cast + ":" + clientIds + ":" + textAreaMessage; // préparer le message à envoyer au serveur
                } else {
                    messageToBeSentToServer = cast + ":" + textAreaMessage; // en cas de diffusion nous n'avons pas besoin de connaître les userIds
                }

                if (cast.equalsIgnoreCase("multicast")) {
                    if (flag == 1) { // pour la multidiffusion, vérifiez si aucun utilisateur n'a été sélectionné, puis affichez une boîte de dialogue de message
                        JOptionPane.showMessageDialog(this, "Veuillez selectionnez le(s)nom(s)\n d'utilisateur");
                    } else { // sinon envoyez simplement le message à l'utilisateur
                        dos.writeUTF(messageToBeSentToServer);
                        editerMessage.setText("");

                        afficherMessage.append("\t-- " + clientIds + " --\n\t" + textAreaMessage + "\n"); //afficher le message envoyé sur le babillard de l'expéditeur
                    }
                } else { // in case of broadcast
                    dos.writeUTF(messageToBeSentToServer);
                    editerMessage.setText("");

                    afficherMessage.append("\t-- Message grouper -- \n\t" + textAreaMessage + "\n");
                }
                clientIds = ""; // clear the all the client ids
            } catch (HeadlessException | IOException ex) {
                JOptionPane.showMessageDialog(this, "utilisateur n'existe pas."); // si l'utilisateur n'existe pas, afficher le message
            }
        }
    }//GEN-LAST:event_btnEnvoyerActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed

        // Créez un sélecteur de fichier pour ouvrir la boîte de dialogue permettant de choisir un fichier.
        JFileChooser jFileChooser = new JFileChooser();
        // Définissez le titre de la boîte de dialogue.
        jFileChooser.setDialogTitle("Choose a file to send.");
        // Affichez la boîte de dialogue et si un fichier est choisi dans le sélecteur de fichier, exécutez les instructions suivantes.
        if (jFileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            // Obtenez le fichier sélectionné.
            fichierEnvoyer[0] = jFileChooser.getSelectedFile();
            // Modifiez le texte de l'étiquette java swing pour avoir le nom du fichier.
            editerMessage.setText(fichierEnvoyer[0].getName());
        }
    }//GEN-LAST:event_fileChooserActionPerformed

    private void multicastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multicastActionPerformed
        // TODO add your handling code here:
        afficherClient.setEnabled(true);
    }//GEN-LAST:event_multicastActionPerformed

    private void broadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_broadcastActionPerformed
        // TODO add your handling code here:
        
         afficherClient.setEnabled(false);
    }//GEN-LAST:event_broadcastActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> afficherClient;
    private javax.swing.JTextArea afficherMessage;
    private javax.swing.JRadioButton broadcast;
    private javax.swing.JButton btnEnvoyer;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel chat;
    private javax.swing.JTextField editerMessage;
    private javax.swing.JButton fileChooser;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel menuG;
    private javax.swing.JRadioButton multicast;
    private javax.swing.JLabel myName;
    private javax.swing.JLabel myName1;
    private javax.swing.JLabel nameSelected;
    public static javax.swing.JPanel panel_head;
    private javax.swing.JTextField txtRecherche;
    // End of variables declaration//GEN-END:variables
}
